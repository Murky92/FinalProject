// Firestore Database Schema for Tabletop Reserve
// This schema outlines the data structure that will work for both web and mobile interfaces

/*
 * USERS COLLECTION
 * Stores user information including admins
 */
users: {
  userId: {  // Auto-generated Firebase Auth UID
    name: String,
    email: String,
    role: String,  // "admin", "user", etc.
    createdAt: Timestamp,
    lastLogin: Timestamp,
    phoneNumber: String,
    profilePicture: String,  // URL to profile picture
  }
}

/*
 * STORES COLLECTION
 * Stores information about shop owners and their shops
 */
stores: {
  storeId: {  // Auto-generated Firebase Auth UID of shop owner
    // Basic Information
    storeName: String,
    ownerName: String,
    email: String,
    phoneNumber: String,
    description: String,
    shopType: String,  // "game-store", "dedicated-tables", "cafe", etc.
    
    // Address Information
    address: String,
    city: String,
    county: String,
    postCode: String,
    
    // Status Information
    isApproved: Boolean,
    registrationStatus: String,  // "pending", "approved", "rejected"
    approvedAt: Timestamp,
    approvedBy: String,
    rejectedAt: Timestamp,
    rejectedBy: String,
    
    // Additional Details
    website: String,
    socialMedia: String,
    
    // Shop Details
    amenities: {
      wifi: Boolean,
      food: Boolean,
      drinks: Boolean,
      parking: Boolean,
      accessible: Boolean,
      gameLibrary: Boolean
    },
    
    paymentMethods: {
      cash: Boolean,
      credit: Boolean,
      debit: Boolean,
      mobile: Boolean
    },
    
    specialty: String,
    
    // Metadata
    createdAt: Timestamp,
    updatedAt: Timestamp,
    role: String  // "shop"
  }
}

/*
 * TABLES COLLECTION
 * Stores information about tables available for reservation
 */
tables: {
  tableId: {  // Auto-generated ID
    shopId: String,  // Reference to stores collection
    tableNumber: Number,  // Unique within the shop
    capacity: Number,  // Number of people the table can accommodate
    tableType: String,  // "standard", "large", "private", etc.
    description: String,
    features: Array,  // ["terrain", "miniatures", "game library"]
    isActive: Boolean,  // Whether the table is available for booking
    hourlyRate: Number,  // Price per hour (if applicable)
    
    // Metadata
    createdAt: Timestamp,
    updatedAt: Timestamp
  }
}

/*
 * OPERATING_HOURS COLLECTION
 * Stores shop operating hours
 */
operatingHours: {
  operatingHoursId: {  // Auto-generated ID
    shopId: String,  // Reference to stores collection
    day: Number,  // 0 = Sunday, 1 = Monday, etc.
    openTime: String,  // "10:00" (24-hour format)
    closeTime: String,  // "22:00" (24-hour format)
    isClosed: Boolean  // True if shop is closed on this day
  }
}

/*
 * SPECIAL_HOURS COLLECTION
 * Stores exceptions to regular operating hours
 */
specialHours: {
  specialHoursId: {  // Auto-generated ID
    shopId: String,  // Reference to stores collection
    date: Timestamp,  // The specific date
    openTime: String,  // "10:00" (24-hour format)
    closeTime: String,  // "22:00" (24-hour format)
    isClosed: Boolean,  // True if shop is closed on this day
    reason: String  // "Holiday", "Special Event", etc.
  }
}

/*
 * RESERVATIONS COLLECTION
 * Stores all table reservations
 * This is the key collection that links mobile users with shops
 */
reservations: {
  reservationId: {  // Auto-generated ID
    // Shop Information
    shopId: String,  // Reference to stores collection
    tableId: String,  // Reference to tables collection
    tableNumber: Number,  // For quick reference
    
    // User Information
    userId: String,  // Reference to users collection (can be null for guests)
    
    // Customer Information
    customerName: String,
    customerEmail: String,
    customerPhone: String,
    
    // Reservation Details
    reservationTime: Timestamp,  // Start time of reservation
    duration: Number,  // Length in hours
    endTime: Timestamp,  // Calculated end time
    partySize: Number,
    notes: String,  // Customer notes
    shopNotes: String,  // Shop owner's notes
    
    // Game Information
    gameName: String,  // Name of game to be played
    gameType: String,  // "board", "rpg", "miniatures", etc.
    
    // Status Information
    status: String,  // "pending", "confirmed", "completed", "cancelled"
    confirmedAt: Timestamp,
    confirmedBy: String,
    completedAt: Timestamp,
    completedBy: String,
    cancelledAt: Timestamp,
    cancelledBy: String,
    cancellationReason: String,
    
    // Payment Information (if applicable)
    totalCost: Number,
    depositPaid: Boolean,
    fullPayment: Boolean,
    paymentMethod: String,
    
    // Metadata
    createdAt: Timestamp,
    updatedAt: Timestamp,
    source: String  // "mobile", "web", "in-person"
  }
}

/*
 * EVENTS COLLECTION
 * Stores special events at shops
 */
events: {
  eventId: {  // Auto-generated ID
    shopId: String,  // Reference to stores collection
    title: String,
    description: String,
    startTime: Timestamp,
    endTime: Timestamp,
    isRecurring: Boolean,
    recurrencePattern: String,  // "weekly", "monthly", etc.
    capacity: Number,
    currentAttendees: Number,
    isPrivate: Boolean,
    registrationRequired: Boolean,
    cost: Number,
    
    // Metadata
    createdAt: Timestamp,
    updatedAt: Timestamp
  }
}

/*
 * SYSTEM_SETTINGS COLLECTION
 * Stores application-wide settings
 */
systemSettings: {
  appSettings: {  // Document ID is fixed
    // Application settings
    autoApproveShops: Boolean,
    emailNotifications: Boolean,
    maintenanceMode: Boolean,
    
    // Registration settings
    requiredFields: {
      phone: Boolean,
      address: Boolean,
      owner: Boolean
    },
    registrationTimeLimit: Number,  // in minutes
    
    // Security settings
    sessionTimeout: Number,  // in minutes
    twoFactorAuth: Boolean,
    failedLoginLimit: Number,
    
    // Reservation settings
    maxReservationDays: Number,  // how many days in advance users can reserve
    minReservationHours: Number,  // minimum notice required for reservation
    
    // Metadata
    updatedAt: Timestamp,
    updatedBy: String
  }
}

/*
 * NOTIFICATIONS COLLECTION
 * Stores notifications for users and shops
 */
notifications: {
  notificationId: {  // Auto-generated ID
    recipientId: String,  // User ID or Shop ID
    recipientType: String,  // "user", "shop"
    title: String,
    message: String,
    type: String,  // "reservation", "approval", "cancellation", etc.
    isRead: Boolean,
    referenceId: String,  // ID of the related document (reservation, etc.)
    referenceType: String,  // "reservation", "shop", etc.
    createdAt: Timestamp
  }
}

/*
 * MOBILE APP SPECIFIC COLLECTIONS
 * These collections support mobile app functionality
 */

// User Favorites
userFavorites: {
  favoriteId: {  // Auto-generated ID
    userId: String,  // Reference to users collection
    shopId: String,  // Reference to stores collection
    createdAt: Timestamp
  }
}

// User Reviews
reviews: {
  reviewId: {  // Auto-generated ID
    userId: String,  // Reference to users collection
    shopId: String,  // Reference to stores collection
    rating: Number,  // 1-5
    comment: String,
    visitDate: Timestamp,
    createdAt: Timestamp,
    updatedAt: Timestamp,
    isApproved: Boolean  // Shops can moderate reviews
  }
}

// Device Tokens for Push Notifications
deviceTokens: {
  tokenId: {  // Auto-generated ID
    userId: String,  // Reference to users collection
    token: String,  // Firebase Cloud Messaging token
    platform: String,  // "ios", "android"
    device: String,  // Device information
    createdAt: Timestamp,
    lastActive: Timestamp
  }
}